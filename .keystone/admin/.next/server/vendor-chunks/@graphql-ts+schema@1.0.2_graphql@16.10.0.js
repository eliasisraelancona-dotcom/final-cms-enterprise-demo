"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@graphql-ts+schema@1.0.2_graphql@16.10.0";
exports.ids = ["vendor-chunks/@graphql-ts+schema@1.0.2_graphql@16.10.0"];
exports.modules = {

/***/ "(pages-dir-node)/../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js":
/*!*********************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GEnumType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType),\n/* harmony export */   GInputObjectType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType),\n/* harmony export */   GInterfaceType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType),\n/* harmony export */   GList: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList),\n/* harmony export */   GNonNull: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull),\n/* harmony export */   GObjectType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType),\n/* harmony export */   GScalarType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType),\n/* harmony export */   GUnionType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType),\n/* harmony export */   gWithContext: () => (/* binding */ gWithContext)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(pages-dir-node)/../../../../node_modules/.pnpm/graphql@16.10.0/node_modules/graphql/index.js\");\n\n\n\n/** @deprecated */\n\n/** @deprecated */\n\n/**\n * The `gWithContext` function accepts a `Context` type parameter which binds\n * the returned functions so they can be used to compose GraphQL types into a\n * GraphQL schema.\n *\n * A simple schema with only a query type looks like this:\n *\n * ```ts\n * import { gWithContext } from \"@graphql-ts/schema\";\n * import { GraphQLSchema, graphql } from \"graphql\";\n *\n * type Context = {};\n *\n * const g = gWithContext<Context>();\n * type g<T> = gWithContext.infer<T>;\n *\n * const Query = g.object()({\n *   name: \"Query\",\n *   fields: {\n *     hello: g.field({\n *       type: g.String,\n *       resolve() {\n *         return \"Hello!\";\n *       },\n *     }),\n *   },\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: Query,\n * });\n *\n * graphql({\n *   source: `\n *       query {\n *         hello\n *       }\n *     `,\n *   schema,\n * }).then((result) => {\n *   console.log(result);\n * });\n * ```\n *\n * You can use pass the `schema` to `ApolloServer` and other GraphQL servers.\n *\n * You can also create a more advanced schema with other object types, circular\n * types, args, and mutations. See {@link GWithContext} for what the other\n * functions on `g` do.\n *\n * ```ts\n * import { gWithContext } from \"@graphql-ts/schema\";\n * import { GraphQLSchema, graphql } from \"graphql\";\n * import { deepEqual } from \"node:assert\";\n *\n * type Context = {\n *   todos: Map<string, TodoItem>;\n * };\n *\n * const g = gWithContext<Context>();\n * type g<T> = gWithContext.infer<T>;\n *\n * type TodoItem = {\n *   id: string;\n *   title: string;\n *   relatedTodos: string[];\n * };\n *\n * const Todo: g<typeof g.object<TodoItem>> = g.object<TodoItem>()({\n *   name: \"Todo\",\n *   fields: () => ({\n *     id: g.field({ type: g.nonNull(g.ID) }),\n *     title: g.field({ type: g.nonNull(g.String) }),\n *     relatedTodos: g.field({\n *       type: g.list(Todo),\n *       resolve(source, _args, context) {\n *         return source.relatedTodos\n *           .map((id) => context.todos.get(id))\n *           .filter((todo) => todo !== undefined);\n *       },\n *     }),\n *   }),\n * });\n *\n * const Query = g.object()({\n *   name: \"Query\",\n *   fields: {\n *     todos: g.field({\n *       type: g.list(Todo),\n *       resolve(_source, _args, context) {\n *         return context.todos.values();\n *       },\n *     }),\n *   },\n * });\n *\n * const Mutation = g.object()({\n *   name: \"Mutation\",\n *   fields: {\n *     createTodo: g.field({\n *       args: {\n *         title: g.arg({ type: g.nonNull(g.String) }),\n *         relatedTodos: g.arg({\n *           type: g.nonNull(g.list(g.nonNull(g.ID))),\n *           defaultValue: [],\n *         }),\n *       },\n *       type: Todo,\n *       resolve(_source, { title, relatedTodos }, context) {\n *         const todo = { title, relatedTodos, id: crypto.randomUUID() };\n *         context.todos.set(todo.id, todo);\n *         return todo;\n *       },\n *     }),\n *   },\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: Query,\n *   mutation: Mutation,\n * });\n *\n * (async () => {\n *   const contextValue: Context = { todos: new Map() };\n *   {\n *     const result = await graphql({\n *       source: `\n *         query {\n *           todos {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, { data: { todos: [] } });\n *   }\n *\n *   {\n *     const result = await graphql({\n *       source: `\n *         mutation {\n *           createTodo(title: \"Try graphql-ts\") {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, {\n *       data: { createTodo: { title: \"Try graphql-ts\" } },\n *     });\n *   }\n *   {\n *     const result = await graphql({\n *       source: `\n *         query {\n *           todos {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, {\n *       data: { todos: [{ title: \"Try graphql-ts\" }] },\n *     });\n *   }\n * })();\n * ```\n */\nfunction gWithContext() {\n  return {\n    scalar(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType(config);\n    },\n    list(of) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(of);\n    },\n    nonNull(of) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(of);\n    },\n    inputObject(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType(config);\n    },\n    enum(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType(config);\n    },\n    union(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType(config);\n    },\n    object() {\n      return function objectInner(config) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType(config);\n      };\n    },\n    interface() {\n      return function interfaceInner(config) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType(config);\n      };\n    },\n    fields() {\n      return function fieldsInner(fields) {\n        return fields;\n      };\n    },\n    field(field) {\n      if (!field.type) {\n        throw new Error(\"A type must be passed to g.field()\");\n      }\n      return field;\n    },\n    interfaceField(field) {\n      if (!field.type) {\n        throw new Error(\"A type must be passed to g.interfaceField()\");\n      }\n      return field;\n    },\n    arg(arg) {\n      if (!arg.type) {\n        throw new Error(\"A type must be passed to g.arg()\");\n      }\n      return arg;\n    },\n    enumValues(values) {\n      return Object.fromEntries(values.map(value => [value, {\n        value\n      }]));\n    },\n    Int: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInt,\n    Float: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLFloat,\n    String: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLString,\n    Boolean: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLBoolean,\n    ID: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLID\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-node)/../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js\n");

/***/ }),

/***/ "../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js":
/*!*********************************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GEnumType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType),\n/* harmony export */   GInputObjectType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType),\n/* harmony export */   GInterfaceType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType),\n/* harmony export */   GList: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList),\n/* harmony export */   GNonNull: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull),\n/* harmony export */   GObjectType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType),\n/* harmony export */   GScalarType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType),\n/* harmony export */   GUnionType: () => (/* reexport safe */ graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType),\n/* harmony export */   gWithContext: () => (/* binding */ gWithContext)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"../../../../node_modules/.pnpm/graphql@16.10.0/node_modules/graphql/index.js\");\n\n\n\n/** @deprecated */\n\n/** @deprecated */\n\n/**\n * The `gWithContext` function accepts a `Context` type parameter which binds\n * the returned functions so they can be used to compose GraphQL types into a\n * GraphQL schema.\n *\n * A simple schema with only a query type looks like this:\n *\n * ```ts\n * import { gWithContext } from \"@graphql-ts/schema\";\n * import { GraphQLSchema, graphql } from \"graphql\";\n *\n * type Context = {};\n *\n * const g = gWithContext<Context>();\n * type g<T> = gWithContext.infer<T>;\n *\n * const Query = g.object()({\n *   name: \"Query\",\n *   fields: {\n *     hello: g.field({\n *       type: g.String,\n *       resolve() {\n *         return \"Hello!\";\n *       },\n *     }),\n *   },\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: Query,\n * });\n *\n * graphql({\n *   source: `\n *       query {\n *         hello\n *       }\n *     `,\n *   schema,\n * }).then((result) => {\n *   console.log(result);\n * });\n * ```\n *\n * You can use pass the `schema` to `ApolloServer` and other GraphQL servers.\n *\n * You can also create a more advanced schema with other object types, circular\n * types, args, and mutations. See {@link GWithContext} for what the other\n * functions on `g` do.\n *\n * ```ts\n * import { gWithContext } from \"@graphql-ts/schema\";\n * import { GraphQLSchema, graphql } from \"graphql\";\n * import { deepEqual } from \"node:assert\";\n *\n * type Context = {\n *   todos: Map<string, TodoItem>;\n * };\n *\n * const g = gWithContext<Context>();\n * type g<T> = gWithContext.infer<T>;\n *\n * type TodoItem = {\n *   id: string;\n *   title: string;\n *   relatedTodos: string[];\n * };\n *\n * const Todo: g<typeof g.object<TodoItem>> = g.object<TodoItem>()({\n *   name: \"Todo\",\n *   fields: () => ({\n *     id: g.field({ type: g.nonNull(g.ID) }),\n *     title: g.field({ type: g.nonNull(g.String) }),\n *     relatedTodos: g.field({\n *       type: g.list(Todo),\n *       resolve(source, _args, context) {\n *         return source.relatedTodos\n *           .map((id) => context.todos.get(id))\n *           .filter((todo) => todo !== undefined);\n *       },\n *     }),\n *   }),\n * });\n *\n * const Query = g.object()({\n *   name: \"Query\",\n *   fields: {\n *     todos: g.field({\n *       type: g.list(Todo),\n *       resolve(_source, _args, context) {\n *         return context.todos.values();\n *       },\n *     }),\n *   },\n * });\n *\n * const Mutation = g.object()({\n *   name: \"Mutation\",\n *   fields: {\n *     createTodo: g.field({\n *       args: {\n *         title: g.arg({ type: g.nonNull(g.String) }),\n *         relatedTodos: g.arg({\n *           type: g.nonNull(g.list(g.nonNull(g.ID))),\n *           defaultValue: [],\n *         }),\n *       },\n *       type: Todo,\n *       resolve(_source, { title, relatedTodos }, context) {\n *         const todo = { title, relatedTodos, id: crypto.randomUUID() };\n *         context.todos.set(todo.id, todo);\n *         return todo;\n *       },\n *     }),\n *   },\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: Query,\n *   mutation: Mutation,\n * });\n *\n * (async () => {\n *   const contextValue: Context = { todos: new Map() };\n *   {\n *     const result = await graphql({\n *       source: `\n *         query {\n *           todos {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, { data: { todos: [] } });\n *   }\n *\n *   {\n *     const result = await graphql({\n *       source: `\n *         mutation {\n *           createTodo(title: \"Try graphql-ts\") {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, {\n *       data: { createTodo: { title: \"Try graphql-ts\" } },\n *     });\n *   }\n *   {\n *     const result = await graphql({\n *       source: `\n *         query {\n *           todos {\n *             title\n *           }\n *         }\n *       `,\n *       schema,\n *       contextValue,\n *     });\n *     deepEqual(result, {\n *       data: { todos: [{ title: \"Try graphql-ts\" }] },\n *     });\n *   }\n * })();\n * ```\n */\nfunction gWithContext() {\n  return {\n    scalar(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType(config);\n    },\n    list(of) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(of);\n    },\n    nonNull(of) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(of);\n    },\n    inputObject(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType(config);\n    },\n    enum(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType(config);\n    },\n    union(config) {\n      return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType(config);\n    },\n    object() {\n      return function objectInner(config) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType(config);\n      };\n    },\n    interface() {\n      return function interfaceInner(config) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType(config);\n      };\n    },\n    fields() {\n      return function fieldsInner(fields) {\n        return fields;\n      };\n    },\n    field(field) {\n      if (!field.type) {\n        throw new Error(\"A type must be passed to g.field()\");\n      }\n      return field;\n    },\n    interfaceField(field) {\n      if (!field.type) {\n        throw new Error(\"A type must be passed to g.interfaceField()\");\n      }\n      return field;\n    },\n    arg(arg) {\n      if (!arg.type) {\n        throw new Error(\"A type must be passed to g.arg()\");\n      }\n      return arg;\n    },\n    enumValues(values) {\n      return Object.fromEntries(values.map(value => [value, {\n        value\n      }]));\n    },\n    Int: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInt,\n    Float: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLFloat,\n    String: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLString,\n    Boolean: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLBoolean,\n    ID: graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLID\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../../node_modules/.pnpm/@graphql-ts+schema@1.0.2_graphql@16.10.0/node_modules/@graphql-ts/schema/dist/graphql-ts-schema.esm.js\n");

/***/ })

};
;
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-find-and-replace@1.1.1";
exports.ids = ["vendor-chunks/mdast-util-find-and-replace@1.1.1"];
exports.modules = {

/***/ "(pages-dir-node)/../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js ***!
  \**************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = findAndReplace\n\nvar visit = __webpack_require__(/*! unist-util-visit-parents */ \"(pages-dir-node)/../../../../node_modules/.pnpm/unist-util-visit-parents@3.1.1/node_modules/unist-util-visit-parents/index.js\")\nvar convert = __webpack_require__(/*! unist-util-is/convert */ \"(pages-dir-node)/../../../../node_modules/.pnpm/unist-util-is@4.1.0/node_modules/unist-util-is/convert.js\")\nvar escape = __webpack_require__(/*! escape-string-regexp */ \"(pages-dir-node)/../../../../node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js\")\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1ub2RlKS8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vbWRhc3QtdXRpbC1maW5kLWFuZC1yZXBsYWNlQDEuMS4xL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWZpbmQtYW5kLXJlcGxhY2UvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7O0FBRUEsWUFBWSxtQkFBTyxDQUFDLCtKQUEwQjtBQUM5QyxjQUFjLG1CQUFPLENBQUMsd0lBQXVCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxtSkFBc0I7O0FBRTNDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVDQUF1QztBQUNuRTs7QUFFQTtBQUNBO0FBQ0Esd0JBQXdCLHVEQUF1RDtBQUMvRTs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxzQkFBc0IsNkNBQTZDO0FBQ25FOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2phaW1laXNyYWVsY2FtcGVhcy9rZXlzdG9uZS9ub2RlX21vZHVsZXMvLnBucG0vbWRhc3QtdXRpbC1maW5kLWFuZC1yZXBsYWNlQDEuMS4xL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLWZpbmQtYW5kLXJlcGxhY2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gZmluZEFuZFJlcGxhY2VcblxudmFyIHZpc2l0ID0gcmVxdWlyZSgndW5pc3QtdXRpbC12aXNpdC1wYXJlbnRzJylcbnZhciBjb252ZXJ0ID0gcmVxdWlyZSgndW5pc3QtdXRpbC1pcy9jb252ZXJ0JylcbnZhciBlc2NhcGUgPSByZXF1aXJlKCdlc2NhcGUtc3RyaW5nLXJlZ2V4cCcpXG5cbnZhciBzcGxpY2UgPSBbXS5zcGxpY2VcblxuZnVuY3Rpb24gZmluZEFuZFJlcGxhY2UodHJlZSwgZmluZCwgcmVwbGFjZSwgb3B0aW9ucykge1xuICB2YXIgc2V0dGluZ3NcbiAgdmFyIHNjaGVtYVxuXG4gIGlmICh0eXBlb2YgZmluZCA9PT0gJ3N0cmluZycgfHwgKGZpbmQgJiYgdHlwZW9mIGZpbmQuZXhlYyA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICBzY2hlbWEgPSBbW2ZpbmQsIHJlcGxhY2VdXVxuICB9IGVsc2Uge1xuICAgIHNjaGVtYSA9IGZpbmRcbiAgICBvcHRpb25zID0gcmVwbGFjZVxuICB9XG5cbiAgc2V0dGluZ3MgPSBvcHRpb25zIHx8IHt9XG5cbiAgc2VhcmNoKHRyZWUsIHNldHRpbmdzLCBoYW5kbGVyRmFjdG9yeSh0b1BhaXJzKHNjaGVtYSkpKVxuXG4gIHJldHVybiB0cmVlXG5cbiAgZnVuY3Rpb24gaGFuZGxlckZhY3RvcnkocGFpcnMpIHtcbiAgICB2YXIgcGFpciA9IHBhaXJzWzBdXG5cbiAgICByZXR1cm4gaGFuZGxlclxuXG4gICAgZnVuY3Rpb24gaGFuZGxlcihub2RlLCBwYXJlbnQpIHtcbiAgICAgIHZhciBmaW5kID0gcGFpclswXVxuICAgICAgdmFyIHJlcGxhY2UgPSBwYWlyWzFdXG4gICAgICB2YXIgbm9kZXMgPSBbXVxuICAgICAgdmFyIHN0YXJ0ID0gMFxuICAgICAgdmFyIGluZGV4ID0gcGFyZW50LmNoaWxkcmVuLmluZGV4T2Yobm9kZSlcbiAgICAgIHZhciBwb3NpdGlvblxuICAgICAgdmFyIG1hdGNoXG4gICAgICB2YXIgc3ViaGFuZGxlclxuICAgICAgdmFyIHZhbHVlXG5cbiAgICAgIGZpbmQubGFzdEluZGV4ID0gMFxuXG4gICAgICBtYXRjaCA9IGZpbmQuZXhlYyhub2RlLnZhbHVlKVxuXG4gICAgICB3aGlsZSAobWF0Y2gpIHtcbiAgICAgICAgcG9zaXRpb24gPSBtYXRjaC5pbmRleFxuICAgICAgICB2YWx1ZSA9IHJlcGxhY2UuYXBwbHkoXG4gICAgICAgICAgbnVsbCxcbiAgICAgICAgICBbXS5jb25jYXQobWF0Y2gsIHtpbmRleDogbWF0Y2guaW5kZXgsIGlucHV0OiBtYXRjaC5pbnB1dH0pXG4gICAgICAgIClcblxuICAgICAgICBpZiAodmFsdWUgIT09IGZhbHNlKSB7XG4gICAgICAgICAgaWYgKHN0YXJ0ICE9PSBwb3NpdGlvbikge1xuICAgICAgICAgICAgbm9kZXMucHVzaCh7dHlwZTogJ3RleHQnLCB2YWx1ZTogbm9kZS52YWx1ZS5zbGljZShzdGFydCwgcG9zaXRpb24pfSlcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHt0eXBlOiAndGV4dCcsIHZhbHVlOiB2YWx1ZX1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIG5vZGVzID0gW10uY29uY2F0KG5vZGVzLCB2YWx1ZSlcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzdGFydCA9IHBvc2l0aW9uICsgbWF0Y2hbMF0ubGVuZ3RoXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWZpbmQuZ2xvYmFsKSB7XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuXG4gICAgICAgIG1hdGNoID0gZmluZC5leGVjKG5vZGUudmFsdWUpXG4gICAgICB9XG5cbiAgICAgIGlmIChwb3NpdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG5vZGVzID0gW25vZGVdXG4gICAgICAgIGluZGV4LS1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChzdGFydCA8IG5vZGUudmFsdWUubGVuZ3RoKSB7XG4gICAgICAgICAgbm9kZXMucHVzaCh7dHlwZTogJ3RleHQnLCB2YWx1ZTogbm9kZS52YWx1ZS5zbGljZShzdGFydCl9KVxuICAgICAgICB9XG5cbiAgICAgICAgbm9kZXMudW5zaGlmdChpbmRleCwgMSlcbiAgICAgICAgc3BsaWNlLmFwcGx5KHBhcmVudC5jaGlsZHJlbiwgbm9kZXMpXG4gICAgICB9XG5cbiAgICAgIGlmIChwYWlycy5sZW5ndGggPiAxKSB7XG4gICAgICAgIHN1YmhhbmRsZXIgPSBoYW5kbGVyRmFjdG9yeShwYWlycy5zbGljZSgxKSlcbiAgICAgICAgcG9zaXRpb24gPSAtMVxuXG4gICAgICAgIHdoaWxlICgrK3Bvc2l0aW9uIDwgbm9kZXMubGVuZ3RoKSB7XG4gICAgICAgICAgbm9kZSA9IG5vZGVzW3Bvc2l0aW9uXVxuXG4gICAgICAgICAgaWYgKG5vZGUudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICAgICAgICBzdWJoYW5kbGVyKG5vZGUsIHBhcmVudClcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VhcmNoKG5vZGUsIHNldHRpbmdzLCBzdWJoYW5kbGVyKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5kZXggKyBub2Rlcy5sZW5ndGggKyAxXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNlYXJjaCh0cmVlLCBzZXR0aW5ncywgaGFuZGxlcikge1xuICB2YXIgaWdub3JlZCA9IGNvbnZlcnQoc2V0dGluZ3MuaWdub3JlIHx8IFtdKVxuICB2YXIgcmVzdWx0ID0gW11cblxuICB2aXNpdCh0cmVlLCAndGV4dCcsIHZpc2l0b3IpXG5cbiAgcmV0dXJuIHJlc3VsdFxuXG4gIGZ1bmN0aW9uIHZpc2l0b3Iobm9kZSwgcGFyZW50cykge1xuICAgIHZhciBpbmRleCA9IC0xXG4gICAgdmFyIHBhcmVudFxuICAgIHZhciBncmFuZHBhcmVudFxuXG4gICAgd2hpbGUgKCsraW5kZXggPCBwYXJlbnRzLmxlbmd0aCkge1xuICAgICAgcGFyZW50ID0gcGFyZW50c1tpbmRleF1cblxuICAgICAgaWYgKFxuICAgICAgICBpZ25vcmVkKFxuICAgICAgICAgIHBhcmVudCxcbiAgICAgICAgICBncmFuZHBhcmVudCA/IGdyYW5kcGFyZW50LmNoaWxkcmVuLmluZGV4T2YocGFyZW50KSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICBncmFuZHBhcmVudFxuICAgICAgICApXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGdyYW5kcGFyZW50ID0gcGFyZW50XG4gICAgfVxuXG4gICAgcmV0dXJuIGhhbmRsZXIobm9kZSwgZ3JhbmRwYXJlbnQpXG4gIH1cbn1cblxuZnVuY3Rpb24gdG9QYWlycyhzY2hlbWEpIHtcbiAgdmFyIHJlc3VsdCA9IFtdXG4gIHZhciBrZXlcbiAgdmFyIGluZGV4XG5cbiAgaWYgKHR5cGVvZiBzY2hlbWEgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBhcnJheSBvciBvYmplY3QgYXMgc2NoZW1hJylcbiAgfVxuXG4gIGlmICgnbGVuZ3RoJyBpbiBzY2hlbWEpIHtcbiAgICBpbmRleCA9IC0xXG5cbiAgICB3aGlsZSAoKytpbmRleCA8IHNjaGVtYS5sZW5ndGgpIHtcbiAgICAgIHJlc3VsdC5wdXNoKFtcbiAgICAgICAgdG9FeHByZXNzaW9uKHNjaGVtYVtpbmRleF1bMF0pLFxuICAgICAgICB0b0Z1bmN0aW9uKHNjaGVtYVtpbmRleF1bMV0pXG4gICAgICBdKVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKGtleSBpbiBzY2hlbWEpIHtcbiAgICAgIHJlc3VsdC5wdXNoKFt0b0V4cHJlc3Npb24oa2V5KSwgdG9GdW5jdGlvbihzY2hlbWFba2V5XSldKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZnVuY3Rpb24gdG9FeHByZXNzaW9uKGZpbmQpIHtcbiAgcmV0dXJuIHR5cGVvZiBmaW5kID09PSAnc3RyaW5nJyA/IG5ldyBSZWdFeHAoZXNjYXBlKGZpbmQpLCAnZycpIDogZmluZFxufVxuXG5mdW5jdGlvbiB0b0Z1bmN0aW9uKHJlcGxhY2UpIHtcbiAgcmV0dXJuIHR5cGVvZiByZXBsYWNlID09PSAnZnVuY3Rpb24nID8gcmVwbGFjZSA6IHJldHVybmVyXG5cbiAgZnVuY3Rpb24gcmV0dXJuZXIoKSB7XG4gICAgcmV0dXJuIHJlcGxhY2VcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-node)/../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js\n");

/***/ }),

/***/ "../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js ***!
  \**************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = findAndReplace\n\nvar visit = __webpack_require__(/*! unist-util-visit-parents */ \"../../../../node_modules/.pnpm/unist-util-visit-parents@3.1.1/node_modules/unist-util-visit-parents/index.js\")\nvar convert = __webpack_require__(/*! unist-util-is/convert */ \"../../../../node_modules/.pnpm/unist-util-is@4.1.0/node_modules/unist-util-is/convert.js\")\nvar escape = __webpack_require__(/*! escape-string-regexp */ \"../../../../node_modules/.pnpm/escape-string-regexp@4.0.0/node_modules/escape-string-regexp/index.js\")\n\nvar splice = [].splice\n\nfunction findAndReplace(tree, find, replace, options) {\n  var settings\n  var schema\n\n  if (typeof find === 'string' || (find && typeof find.exec === 'function')) {\n    schema = [[find, replace]]\n  } else {\n    schema = find\n    options = replace\n  }\n\n  settings = options || {}\n\n  search(tree, settings, handlerFactory(toPairs(schema)))\n\n  return tree\n\n  function handlerFactory(pairs) {\n    var pair = pairs[0]\n\n    return handler\n\n    function handler(node, parent) {\n      var find = pair[0]\n      var replace = pair[1]\n      var nodes = []\n      var start = 0\n      var index = parent.children.indexOf(node)\n      var position\n      var match\n      var subhandler\n      var value\n\n      find.lastIndex = 0\n\n      match = find.exec(node.value)\n\n      while (match) {\n        position = match.index\n        value = replace.apply(\n          null,\n          [].concat(match, {index: match.index, input: match.input})\n        )\n\n        if (value !== false) {\n          if (start !== position) {\n            nodes.push({type: 'text', value: node.value.slice(start, position)})\n          }\n\n          if (typeof value === 'string' && value.length > 0) {\n            value = {type: 'text', value: value}\n          }\n\n          if (value) {\n            nodes = [].concat(nodes, value)\n          }\n\n          start = position + match[0].length\n        }\n\n        if (!find.global) {\n          break\n        }\n\n        match = find.exec(node.value)\n      }\n\n      if (position === undefined) {\n        nodes = [node]\n        index--\n      } else {\n        if (start < node.value.length) {\n          nodes.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        nodes.unshift(index, 1)\n        splice.apply(parent.children, nodes)\n      }\n\n      if (pairs.length > 1) {\n        subhandler = handlerFactory(pairs.slice(1))\n        position = -1\n\n        while (++position < nodes.length) {\n          node = nodes[position]\n\n          if (node.type === 'text') {\n            subhandler(node, parent)\n          } else {\n            search(node, settings, subhandler)\n          }\n        }\n      }\n\n      return index + nodes.length + 1\n    }\n  }\n}\n\nfunction search(tree, settings, handler) {\n  var ignored = convert(settings.ignore || [])\n  var result = []\n\n  visit(tree, 'text', visitor)\n\n  return result\n\n  function visitor(node, parents) {\n    var index = -1\n    var parent\n    var grandparent\n\n    while (++index < parents.length) {\n      parent = parents[index]\n\n      if (\n        ignored(\n          parent,\n          grandparent ? grandparent.children.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    return handler(node, grandparent)\n  }\n}\n\nfunction toPairs(schema) {\n  var result = []\n  var key\n  var index\n\n  if (typeof schema !== 'object') {\n    throw new Error('Expected array or object as schema')\n  }\n\n  if ('length' in schema) {\n    index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    for (key in schema) {\n      result.push([toExpression(key), toFunction(schema[key])])\n    }\n  }\n\n  return result\n}\n\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : returner\n\n  function returner() {\n    return replace\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtZmluZC1hbmQtcmVwbGFjZUAxLjEuMS9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1maW5kLWFuZC1yZXBsYWNlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaOztBQUVBLFlBQVksbUJBQU8sQ0FBQyw4SUFBMEI7QUFDOUMsY0FBYyxtQkFBTyxDQUFDLHVIQUF1QjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsa0lBQXNCOztBQUUzQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1Q0FBdUM7QUFDbkU7O0FBRUE7QUFDQTtBQUNBLHdCQUF3Qix1REFBdUQ7QUFDL0U7O0FBRUE7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0Esc0JBQXNCLDZDQUE2QztBQUNuRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYWltZWlzcmFlbGNhbXBlYXMva2V5c3RvbmUvbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtZmluZC1hbmQtcmVwbGFjZUAxLjEuMS9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1maW5kLWFuZC1yZXBsYWNlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmRBbmRSZXBsYWNlXG5cbnZhciB2aXNpdCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtdmlzaXQtcGFyZW50cycpXG52YXIgY29udmVydCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtaXMvY29udmVydCcpXG52YXIgZXNjYXBlID0gcmVxdWlyZSgnZXNjYXBlLXN0cmluZy1yZWdleHAnKVxuXG52YXIgc3BsaWNlID0gW10uc3BsaWNlXG5cbmZ1bmN0aW9uIGZpbmRBbmRSZXBsYWNlKHRyZWUsIGZpbmQsIHJlcGxhY2UsIG9wdGlvbnMpIHtcbiAgdmFyIHNldHRpbmdzXG4gIHZhciBzY2hlbWFcblxuICBpZiAodHlwZW9mIGZpbmQgPT09ICdzdHJpbmcnIHx8IChmaW5kICYmIHR5cGVvZiBmaW5kLmV4ZWMgPT09ICdmdW5jdGlvbicpKSB7XG4gICAgc2NoZW1hID0gW1tmaW5kLCByZXBsYWNlXV1cbiAgfSBlbHNlIHtcbiAgICBzY2hlbWEgPSBmaW5kXG4gICAgb3B0aW9ucyA9IHJlcGxhY2VcbiAgfVxuXG4gIHNldHRpbmdzID0gb3B0aW9ucyB8fCB7fVxuXG4gIHNlYXJjaCh0cmVlLCBzZXR0aW5ncywgaGFuZGxlckZhY3RvcnkodG9QYWlycyhzY2hlbWEpKSlcblxuICByZXR1cm4gdHJlZVxuXG4gIGZ1bmN0aW9uIGhhbmRsZXJGYWN0b3J5KHBhaXJzKSB7XG4gICAgdmFyIHBhaXIgPSBwYWlyc1swXVxuXG4gICAgcmV0dXJuIGhhbmRsZXJcblxuICAgIGZ1bmN0aW9uIGhhbmRsZXIobm9kZSwgcGFyZW50KSB7XG4gICAgICB2YXIgZmluZCA9IHBhaXJbMF1cbiAgICAgIHZhciByZXBsYWNlID0gcGFpclsxXVxuICAgICAgdmFyIG5vZGVzID0gW11cbiAgICAgIHZhciBzdGFydCA9IDBcbiAgICAgIHZhciBpbmRleCA9IHBhcmVudC5jaGlsZHJlbi5pbmRleE9mKG5vZGUpXG4gICAgICB2YXIgcG9zaXRpb25cbiAgICAgIHZhciBtYXRjaFxuICAgICAgdmFyIHN1YmhhbmRsZXJcbiAgICAgIHZhciB2YWx1ZVxuXG4gICAgICBmaW5kLmxhc3RJbmRleCA9IDBcblxuICAgICAgbWF0Y2ggPSBmaW5kLmV4ZWMobm9kZS52YWx1ZSlcblxuICAgICAgd2hpbGUgKG1hdGNoKSB7XG4gICAgICAgIHBvc2l0aW9uID0gbWF0Y2guaW5kZXhcbiAgICAgICAgdmFsdWUgPSByZXBsYWNlLmFwcGx5KFxuICAgICAgICAgIG51bGwsXG4gICAgICAgICAgW10uY29uY2F0KG1hdGNoLCB7aW5kZXg6IG1hdGNoLmluZGV4LCBpbnB1dDogbWF0Y2guaW5wdXR9KVxuICAgICAgICApXG5cbiAgICAgICAgaWYgKHZhbHVlICE9PSBmYWxzZSkge1xuICAgICAgICAgIGlmIChzdGFydCAhPT0gcG9zaXRpb24pIHtcbiAgICAgICAgICAgIG5vZGVzLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6IG5vZGUudmFsdWUuc2xpY2Uoc3RhcnQsIHBvc2l0aW9uKX0pXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdmFsdWUgPSB7dHlwZTogJ3RleHQnLCB2YWx1ZTogdmFsdWV9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICBub2RlcyA9IFtdLmNvbmNhdChub2RlcywgdmFsdWUpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgc3RhcnQgPSBwb3NpdGlvbiArIG1hdGNoWzBdLmxlbmd0aFxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFmaW5kLmdsb2JhbCkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cblxuICAgICAgICBtYXRjaCA9IGZpbmQuZXhlYyhub2RlLnZhbHVlKVxuICAgICAgfVxuXG4gICAgICBpZiAocG9zaXRpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBub2RlcyA9IFtub2RlXVxuICAgICAgICBpbmRleC0tXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoc3RhcnQgPCBub2RlLnZhbHVlLmxlbmd0aCkge1xuICAgICAgICAgIG5vZGVzLnB1c2goe3R5cGU6ICd0ZXh0JywgdmFsdWU6IG5vZGUudmFsdWUuc2xpY2Uoc3RhcnQpfSlcbiAgICAgICAgfVxuXG4gICAgICAgIG5vZGVzLnVuc2hpZnQoaW5kZXgsIDEpXG4gICAgICAgIHNwbGljZS5hcHBseShwYXJlbnQuY2hpbGRyZW4sIG5vZGVzKVxuICAgICAgfVxuXG4gICAgICBpZiAocGFpcnMubGVuZ3RoID4gMSkge1xuICAgICAgICBzdWJoYW5kbGVyID0gaGFuZGxlckZhY3RvcnkocGFpcnMuc2xpY2UoMSkpXG4gICAgICAgIHBvc2l0aW9uID0gLTFcblxuICAgICAgICB3aGlsZSAoKytwb3NpdGlvbiA8IG5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgIG5vZGUgPSBub2Rlc1twb3NpdGlvbl1cblxuICAgICAgICAgIGlmIChub2RlLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICAgICAgc3ViaGFuZGxlcihub2RlLCBwYXJlbnQpXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlYXJjaChub2RlLCBzZXR0aW5ncywgc3ViaGFuZGxlcilcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGluZGV4ICsgbm9kZXMubGVuZ3RoICsgMVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBzZWFyY2godHJlZSwgc2V0dGluZ3MsIGhhbmRsZXIpIHtcbiAgdmFyIGlnbm9yZWQgPSBjb252ZXJ0KHNldHRpbmdzLmlnbm9yZSB8fCBbXSlcbiAgdmFyIHJlc3VsdCA9IFtdXG5cbiAgdmlzaXQodHJlZSwgJ3RleHQnLCB2aXNpdG9yKVxuXG4gIHJldHVybiByZXN1bHRcblxuICBmdW5jdGlvbiB2aXNpdG9yKG5vZGUsIHBhcmVudHMpIHtcbiAgICB2YXIgaW5kZXggPSAtMVxuICAgIHZhciBwYXJlbnRcbiAgICB2YXIgZ3JhbmRwYXJlbnRcblxuICAgIHdoaWxlICgrK2luZGV4IDwgcGFyZW50cy5sZW5ndGgpIHtcbiAgICAgIHBhcmVudCA9IHBhcmVudHNbaW5kZXhdXG5cbiAgICAgIGlmIChcbiAgICAgICAgaWdub3JlZChcbiAgICAgICAgICBwYXJlbnQsXG4gICAgICAgICAgZ3JhbmRwYXJlbnQgPyBncmFuZHBhcmVudC5jaGlsZHJlbi5pbmRleE9mKHBhcmVudCkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgZ3JhbmRwYXJlbnRcbiAgICAgICAgKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVyblxuICAgICAgfVxuXG4gICAgICBncmFuZHBhcmVudCA9IHBhcmVudFxuICAgIH1cblxuICAgIHJldHVybiBoYW5kbGVyKG5vZGUsIGdyYW5kcGFyZW50KVxuICB9XG59XG5cbmZ1bmN0aW9uIHRvUGFpcnMoc2NoZW1hKSB7XG4gIHZhciByZXN1bHQgPSBbXVxuICB2YXIga2V5XG4gIHZhciBpbmRleFxuXG4gIGlmICh0eXBlb2Ygc2NoZW1hICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYXJyYXkgb3Igb2JqZWN0IGFzIHNjaGVtYScpXG4gIH1cblxuICBpZiAoJ2xlbmd0aCcgaW4gc2NoZW1hKSB7XG4gICAgaW5kZXggPSAtMVxuXG4gICAgd2hpbGUgKCsraW5kZXggPCBzY2hlbWEubGVuZ3RoKSB7XG4gICAgICByZXN1bHQucHVzaChbXG4gICAgICAgIHRvRXhwcmVzc2lvbihzY2hlbWFbaW5kZXhdWzBdKSxcbiAgICAgICAgdG9GdW5jdGlvbihzY2hlbWFbaW5kZXhdWzFdKVxuICAgICAgXSlcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yIChrZXkgaW4gc2NoZW1hKSB7XG4gICAgICByZXN1bHQucHVzaChbdG9FeHByZXNzaW9uKGtleSksIHRvRnVuY3Rpb24oc2NoZW1hW2tleV0pXSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG5cbmZ1bmN0aW9uIHRvRXhwcmVzc2lvbihmaW5kKSB7XG4gIHJldHVybiB0eXBlb2YgZmluZCA9PT0gJ3N0cmluZycgPyBuZXcgUmVnRXhwKGVzY2FwZShmaW5kKSwgJ2cnKSA6IGZpbmRcbn1cblxuZnVuY3Rpb24gdG9GdW5jdGlvbihyZXBsYWNlKSB7XG4gIHJldHVybiB0eXBlb2YgcmVwbGFjZSA9PT0gJ2Z1bmN0aW9uJyA/IHJlcGxhY2UgOiByZXR1cm5lclxuXG4gIGZ1bmN0aW9uIHJldHVybmVyKCkge1xuICAgIHJldHVybiByZXBsYWNlXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../../node_modules/.pnpm/mdast-util-find-and-replace@1.1.1/node_modules/mdast-util-find-and-replace/index.js\n");

/***/ })

};
;